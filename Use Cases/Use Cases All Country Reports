# USE CASE #1: View all Countries in the world by population (Country Report)

## CHARACTERISTIC INFORMATION
**Goal in Context**
As a Data Analyst, I want to view all countries sorted from largest to smallest population so that I can easily identify the most populous nations.

**Scope**
World Population Reporting System

**Level**
Primary task

**Preconditions**
* The database (world.sql) is connected and loaded.
* The user is logged into the system interface (CLI or GUI).
* Country data (code, name, continent, region, population, capital) is present in the database.

**Success End Condition**
The system successfully generates and displays a complete list of all countries in the world ordered from largest to smallest population.

**Failed End Condition**
Database connection fails, query returns no results, or data cannot be displayed

**Primary Actor**
Data Analyst

**Trigger**
The User selects the Country Report then All Countries from the system dashboard

## MAIN SUCCESS SCENARIO
1. The user opens the World Population Reporting System.
2. The system displays the main dashboard with report options.
3. The user selects Country Report from the available options.
4. The system displays a submenu for Report Type (All, Continent, Region, Top N).
5. The user selects All Countries.
6. The system executes a SQL query to retrieve all countries from the database.
7. The system sorts the list of countries in descending order by population.
8. The system displays the formatted report in the following columns: **Code, Name, Continent, Region, Population, Capital**
9. The user reviews the report or exports it for further analysis

## EXTENSIONS
* **6a.** Database connection fails, System logs the error and displays: "Unable to retrieve data. Please check database connection."
* **7a.** Query returns no results; System displays: "No country data available."
* **8a.** Data load or rendering error, System displays: "Unable to display results. Please retry."

## SUB-VARIATIONS
* The report may be exported in CSV, PDF, or displayed as an on-screen table.

## SCHEDULE
**Due Date:** Release 1.0

---

# USE CASE #2: View all countries in a continent by population (Country Report)

## CHARACTERISTIC INFORMATION
**Goal in Context**
As a Data Analyst, I want to list all countries within a selected continent ordered by population so that I can compare population distribution per continent.

**Scope**
World Population Reporting System

**Level**
Primary task

**Preconditions**
* The database (world.sql) is connected and loaded.
* Valid continent names exist in the database.
* The user is logged into the system interface (CLI or GUI).

**Success End Condition**
The system successfully generates and displays a list of countries within the specified continent, ordered from largest to smallest population.

**Failed End Condition**
No matching continent found, invalid input provided, database query fails, or no results found.

**Primary Actor**
Data Analyst

**Trigger**
The user selects the Country Report then By Continent option and enters the desired continent name.

## MAIN SUCCESS SCENARIO
1. The user opens the World Population Reporting System.
2. The system displays the main dashboard with report options.
3. The user selects Country Report from the available options.
4. The system displays a submenu for Report Type (All, Continent, Region, Top N).
5. The user selects by Continent.
6. The system prompts the user to enter a continent name (e.g., "Asia").
7. The user provides a valid continent name.
8. The system executes a SQL query joining the relevant tables to filter countries belonging to the specified continent.
9. The system sorts the results by population in descending order.
10. The system displays the formatted report in the following columns: **Code, Name, Continent, Region, Population, Capital**
11. The user reviews the report.

## EXTENSIONS
* **6a.** User enters an invalid or misspelled continent name, System displays: "Invalid continent. Try again."
* **8a.** Database connection fails, System logs the error and displays: "Unable to retrieve data. Please check database connection."
* **9a.** No countries found for the selected continent, System displays: "No data available for this continent."

## SUB-VARIATIONS
* The report may be exported in CSV, PDF, or displayed as an on-screen table.

## SCHEDULE
**Due Date:** Release 1.0

---

# USE CASE #3: View all countries in a region by population (Country Report)

## CHARACTERISTIC INFORMATION
**Goal in Context**
As a Data Analyst, I want to list all countries within a selected region ordered by population so that I can analyze and compare regional population trends.

**Scope**
World Population Reporting System

**Level**
Primary task

**Preconditions**
* The database (world.sql) is connected and loaded.
* Valid region names exist in the database.
* The user is logged into the system interface (CLI or GUI).

**Success End Condition**
The system successfully generates and displays a list of countries within the specified region, ordered from largest to smallest population.

**Failed End Condition**
No matching region found, invalid input provided, database query fails, or no results found.

**Primary Actor**
Data Analyst

**Trigger**
The user selects the Country Report then By Region option and enters the desired region name.

## MAIN SUCCESS SCENARIO
1. The user opens the World Population Reporting System.
2. The system displays the main dashboard with report options.
3. The user selects Country Report from the available options.
4. The system displays a submenu for Report Type (All, Continent, Region, Top N).
5. The user selects By Region.
6. The system prompts the user to enter a region name (e.g., "Caribbean").
7. The user provides a valid region name.
8. The system executes a SQL query joining the relevant tables to filter countries belonging to the specified region.
9. The system sorts the results by population in descending order.
10. The system displays the formatted report in the following columns: **Code, Name, Continent, Region, Population, Capital**
11. The user reviews the report.

## EXTENSIONS
* **6a.** User enters an invalid or misspelled region name; System displays: "Invalid region. Try again."
* **8a.** Database connection fails, System logs the error and displays: "Unable to retrieve data. Please check database connection."
* **9a.** No countries found for the selected region, System displays: "No data available for this region."

## SUB-VARIATIONS
* The report may be exported in CSV, PDF, or displayed as an on-screen table.

## SCHEDULE
**Due Date:** Release 1.0

---

# USE CASE #4: View the top N most populated countries in the world (Country Report)

## CHARACTERISTIC INFORMATION
**Goal in Context**
As a Data Analyst, I want to view the top N most populated countries globally so that I can focus my analysis on the largest nations.

**Scope**
World Population Reporting System

**Level**
Primary task

**Preconditions**
* The database (world.sql) is connected and loaded.
* The user is logged into the system interface (CLI or GUI).
* A valid integer value (N) is provided by the user.

**Success End Condition**
The system successfully generates and displays the top N countries in the world sorted by population in descending order.

**Failed End Condition**
Invalid N value, database query failure, or no data returned.

**Primary Actor**
Data Analyst

**Trigger**
The user selects the Country Report then Top N (World) option and enters the desired number of results (N).

## MAIN SUCCESS SCENARIO
1. The user opens the World Population Reporting System.
2. The system displays the main dashboard with report options.
3. The user selects Country Report from the available options.
4. The system displays a submenu for Report Type (All, Continent, Region, Top N).
5. The user selects Top N (World).
6. The system prompts the user to enter an integer value (N) representing the number of countries to display.
7. The user enters a valid integer (e.g., 10).
8. The system validates the input and executes a SQL query to retrieve the top N countries ordered by population in descending order.
9. The system displays the formatted report in the following columns: **Code, Name, Continent, Region, Population, Capital**
10. The user reviews or exports the report for analysis.

## EXTENSIONS
* **6a.** User enters an invalid or non-numeric N value; System displays: "Invalid entry. Please enter a numeric value for N."
* **8a.** Database connection fails, System logs the error and displays: "Unable to retrieve data. Please check database connection."
* **9a.** No countries found, System displays: "No data available."

## SUB-VARIATIONS
* The report may be exported in CSV, PDF, or displayed as an on-screen table.

## SCHEDULE
**Due Date:** Release 1.0

---

# USE CASE #5: View the top N most populated countries in a continent (Country Report)

## CHARACTERISTIC INFORMATION
**Goal in Context**
As a Data Analyst, I want to see the top N most populated countries within a continent so that I can identify and compare the key countries contributing most to the continent's total population.

**Scope**
World Population Reporting System

**Level**
Primary task

**Preconditions**
* The database (world.sql) is connected and loaded.
* Valid continent names exist in the database.
* The user is logged into the system interface (CLI or GUI).
* A valid integer value (N) is provided by the user.

**Success End Condition**
The system successfully generates and displays the top N countries within the specified continent sorted by population in descending order.

**Failed End Condition**
Invalid continent name, invalid N value, database query fails, or no results returned.

**Primary Actor**
Data Analyst

**Trigger**
The user selects the Country Report then Top N (Continent) option and enters the desired continent name and number of results (N).

## MAIN SUCCESS SCENARIO
1. The user opens the World Population Reporting System.
2. The system displays the main dashboard with report options.
3. The user selects Country Report from the available options.
4. The system displays a submenu for Report Type (All, Continent, Region, Top N).
5. The user selects Top N (Continent).
6. The system prompts the user to enter a continent name (e.g., "Africa") and a numeric value for N (e.g., 10).
7. The user enters a valid continent name and integer value.
8. The system validates both inputs.
9. The system executes a SQL query joining relevant tables to filter countries within the specified continent, limiting the results to the top N by population.
10. The system displays the formatted report in the following columns: **Code, Name, Continent, Region, Population, Capital**
11. The user reviews or exports the report for analysis.

## EXTENSIONS
* **6a.** User enters an invalid or misspelled continent name, System displays: "Invalid continent. Please check the spelling or try again."
* **6b.** User enters a non-numeric or negative N value; System displays: "Invalid entry. Please enter a positive whole number."
* **9a.** Database connection fails, System logs the error and displays: "Unable to retrieve data. Please check database connection."
* **9b.** No countries found, System displays: "No data available for the selected continent."

## SUB-VARIATIONS
* The report may be exported in CSV, PDF, or displayed as an on-screen table.

## SCHEDULE
**Due Date:** Release 1.0

---

# USE CASE #6: View the top N most populated countries in a region (Country Report)

## CHARACTERISTIC INFORMATION
**Goal in Context**
As a Data Analyst, I want to see the top N most populated countries within a region so that I can analyze regional population distribution and identify dominant nations within that region.

**Scope**
World Population Reporting System

**Level**
Primary task

**Preconditions**
* The database (world.sql) is connected and loaded.
* Valid region names exist in the database.
* The user is logged into the system interface (CLI or GUI).
* A valid integer value (N) is provided by the user.

**Success End Condition**
The system successfully generates and displays the top N countries within the specified region sorted by population in descending order.

**Failed End Condition**
Invalid region name, invalid N value, database query fails, or no results found.

**Primary Actor**
Data Analyst

**Trigger**
The user selects the Country Report then Top N (Region) option and enters the desired region name and number of results (N).

## MAIN SUCCESS SCENARIO
1. The user opens the World Population Reporting System.
2. The system displays the main dashboard with report options.
3. The user selects Country Report from the available options.
4. The system displays a submenu for Report Type (All, Continent, Region, Top N).
5. The user selects Top N (Region).
6. The system prompts the user to enter a region name (e.g., "Caribbean") and a numeric value for N (e.g., 5).
7. The user enters a valid region name and integer value.
8. The system validates both inputs.
9. The system executes a SQL query joining relevant tables to filter countries belonging to the specified region, limiting the results to the top N by population.
10. The system displays the formatted report in the following columns: **Code, Name, Continent, Region, Population, Capital**
11. The user reviews the report and optionally exports it for further use.

## EXTENSIONS
* **6a.** User enters an invalid or misspelled region name → System displays: "Invalid region. Please check the spelling or try again."
* **6b.** User enters a non-numeric or negative N value → System displays: "Invalid entry. Please enter a positive whole number."
* **9a.** Database connection fails → System logs the error and displays: "Unable to retrieve data. Please check database connection."
* **9b.** No countries found → System displays: "No data available for the selected region."

## SUB-VARIATIONS
* The report may be exported in CSV, PDF, or displayed as an on-screen table.

## SCHEDULE
**Due Date:** Release 1.0
